name: Playwright Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC
  workflow_dispatch:      # Manual trigger

env:
  NODE_VERSION: '18'

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps ${{ matrix.browser }}
      
    - name: Run TypeScript type checking
      run: npm run type-check
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Run Playwright tests
      run: npx playwright test --project=${{ matrix.browser }}
      env:
        BASE_URL: ${{ secrets.BASE_URL || 'https://demo.playwright.dev' }}
        TEST_USERNAME: ${{ secrets.TEST_USERNAME }}
        TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.browser }}
        path: playwright-report/
        retention-days: 30
        
    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-results-${{ matrix.browser }}
        path: test-results/
        retention-days: 7

  # Smoke tests for quick feedback
  smoke-tests:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps chromium
      
    - name: Run smoke tests
      run: npm run test:smoke
      env:
        BASE_URL: ${{ secrets.BASE_URL || 'https://demo.playwright.dev' }}
        TEST_USERNAME: ${{ secrets.TEST_USERNAME }}
        TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
        
    - name: Upload smoke test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: smoke-test-report
        path: playwright-report/
        retention-days: 14

  # Mobile testing
  mobile-tests:
    timeout-minutes: 45
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps chromium
      
    - name: Run mobile tests
      run: npm run test:mobile
      env:
        BASE_URL: ${{ secrets.BASE_URL || 'https://demo.playwright.dev' }}
        TEST_USERNAME: ${{ secrets.TEST_USERNAME }}
        TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
        
    - name: Upload mobile test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: mobile-test-report
        path: playwright-report/
        retention-days: 14

  # Merge test results and notifications
  results:
    needs: [test, smoke-tests, mobile-tests]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Merge test reports
      run: |
        echo "All test jobs completed"
        ls -la
        
    - name: Comment PR with results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          let comment = '## üé≠ Playwright Test Results\n\n';
          
          // Check for test artifacts
          const artifacts = fs.readdirSync('.', { withFileTypes: true })
            .filter(dirent => dirent.isDirectory())
            .map(dirent => dirent.name);
          
          if (artifacts.length > 0) {
            comment += '‚úÖ Tests completed successfully!\n\n';
            comment += `**Artifacts generated:** ${artifacts.length}\n`;
            comment += '- Check the Actions tab for detailed reports\n';
            comment += '- Download artifacts to view HTML reports\n';
          } else {
            comment += '‚ùå No test artifacts found\n';
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
          
    - name: Notify on failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `Test Failure - ${context.workflow} #${context.runNumber}`,
            body: `
              ## Test Failure Alert
              
              **Workflow:** ${context.workflow}
              **Run Number:** ${context.runNumber}
              **Branch:** ${context.ref}
              **Commit:** ${context.sha}
              
              Please check the [workflow run](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}) for details.
            `,
            labels: ['bug', 'ci-failure']
          });
